{"version":3,"sources":["components/Input/Input.js","App.js","index.js"],"names":["Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","deleteSelf","onComponentDelete","selfIndex","checkValidation","e","setState","defineProperty","target","name","value","onComponentChange","state","validate","inputs","every","element","length","addComponent","childrensData","concat","toConsumableArray","key","Date","now","Math","random","deleteComponent","index","result","filter","data","saveChildData","child","x","childIndex","indexOf","dataToAdd","question","inputType","answer","condition","map","objectSpread","undefined","values","_this2","parentInputType","react_default","a","createElement","Card_default","CardContent_default","Select_default","label","onClick","required","index_es","TextField_default","type","onChange","RadioGroup_default","FormControlLabel_default","control","Radio_default","Button_default","variant","color","disabled","Component","App","openDataBase","Promise","resolve","reject","request","window","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","onsuccess","onerror","error","onblocked","alert","loadData","dataBase","transaction","objectStore","get","addOrUpdateData","put","id","generateComponents","openedDataBase","then","_this3","dataToPush","onbeforeunload","forEach","push","_this4","components_Input_Input","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.73a64b28.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Input.scss';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nclass Input extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      childrensData: props.childrensData !== undefined ? Object.values(props.childrensData) : [],\r\n      question: props.question !== undefined ? props.question : '',\r\n      inputType: props.inputType !== undefined ? props.inputType : '',\r\n      answer: props.answer !== undefined ? props.answer : '',\r\n      condition: props.condition !== undefined ? props.condition : '',\r\n    }\r\n  }\r\n\r\n  deleteSelf = () => {\r\n    this.props.onComponentDelete(this.props.selfIndex);\r\n  }\r\n\r\n  checkValidation = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    }, () => this.props.onComponentChange(this.state, this.props.selfIndex));\r\n  }\r\n\r\n  validate = (inputs) => {\r\n    return inputs.every(element => {\r\n      return element.length > 0\r\n    });\r\n  }\r\n\r\n  addComponent = () => {\r\n    this.setState({\r\n      childrensData: [...this.state.childrensData, { key: Date.now() + Math.random() }]\r\n    }, () => this.props.onComponentChange(this.state, this.props.selfIndex));\r\n  }\r\n\r\n  deleteComponent = (index) => {\r\n    let result = this.state.childrensData.filter(data => data.key !== index);\r\n\r\n    this.setState({\r\n      childrensData: result\r\n    }, () => this.props.onComponentChange(this.state, this.props.selfIndex));\r\n  }\r\n\r\n  saveChildData = (data, key) => {\r\n    let child = this.state.childrensData.filter(x => x.key === key)[0];\r\n    let childIndex = this.state.childrensData.indexOf(child);\r\n    let dataToAdd = { question: data.question, inputType: data.inputType, answer: data.answer, condition: data.condition, childrensData: data.childrensData }\r\n    this.setState(state => {\r\n      const childrensData = state.childrensData.map((element, index) => {\r\n        if (childIndex === index) {\r\n          return { ...child, ...dataToAdd }\r\n        } else {\r\n          return element;\r\n        }\r\n      })\r\n      return {\r\n        childrensData\r\n      }\r\n    }, () => this.props.onComponentChange(this.state, this.props.selfIndex));\r\n  }\r\n\r\n  render() {\r\n    let inputs = this.props.parentInputType === undefined ? [this.state.question, this.state.inputType] : [this.state.question, this.state.inputType, this.state.answer, this.state.condition];\r\n    let child = this.state.childrensData.map((data) => {\r\n      return <Input key={data.key}\r\n        selfIndex={data.key}\r\n        parentInputType={this.state.inputType}\r\n        onComponentDelete={this.deleteComponent}\r\n        onComponentChange={this.saveChildData}\r\n        question={data.question}\r\n        inputType={data.inputType}\r\n        childrensData={data.childrensData}\r\n        answer={data.answer}\r\n        condition={data.condition}> </Input>\r\n    });\r\n\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          {\r\n            this.props.parentInputType ?\r\n              <Select label=\"Condition\" value={this.state.condition} name=\"condition\" onClick={this.checkValidation} required>\r\n                {\r\n                  this.props.parentInputType === \"Number\" ?\r\n                    [\"Equals\", \"Greather than\", \"Less than\"].map((data, index) =>\r\n                      <MenuItem value={data} key={index}>{data}</MenuItem>) :\r\n                    [\"Equals\"].map((data, index) =>\r\n                      <MenuItem value={data} key={index}>{data}</MenuItem>)\r\n                }\r\n              </Select> : null\r\n          }\r\n\r\n          {\r\n            this.props.parentInputType ?\r\n              this.props.parentInputType !== \"Yes/No\" ?\r\n                <TextField label=\"Answer\"\r\n                  type={this.props.parentInputType === \"Text\" ? \"text\" : \"number\"}\r\n                  value={this.state.answer} name='answer'\r\n                  onChange={this.checkValidation} required></TextField> :\r\n                <RadioGroup label=\"Answer\" name=\"answer\"\r\n                  value={this.state.answer}\r\n                  onChange={this.checkValidation}>\r\n                  {\r\n                    [\"Yes\", \"No\"].map((data, index) =>\r\n                      <FormControlLabel\r\n                        value={data}\r\n                        key={index}\r\n                        control={<Radio />}\r\n                        label={data} />)\r\n                  }\r\n                </RadioGroup> : null\r\n          }\r\n\r\n          <TextField label=\"Question\" type=\"text\"\r\n            value={this.state.question}\r\n            name=\"question\"\r\n            onChange={this.checkValidation} required></TextField>\r\n          <Select label=\"InputType\"\r\n            value={this.state.inputType}\r\n            name=\"inputType\"\r\n            onClick={this.checkValidation} required>\r\n            {\r\n              [\"Text\", \"Number\", \"Yes/No\"].map((data, index) => <MenuItem value={data} key={index}>{data}</MenuItem>)\r\n            }\r\n          </Select>\r\n          <Button variant=\"contained\" color=\"primary\"\r\n            disabled={!this.validate(inputs)}\r\n            onClick={this.addComponent}>Add SubInput</Button>\r\n          <Button variant=\"contained\" color=\"secondary\"\r\n            onClick={this.deleteSelf}>Remove</Button>\r\n          {child}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Input;\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Input from './components/Input/Input';\nimport Button from '@material-ui/core/Button';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      childrensData: []\n    }\n  }\n\n  openDataBase = () => {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open(\"database\", 1);\n      request.onupgradeneeded = () => {\n        request.result.createObjectStore('state', { keyPath: 'id' });\n      }\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n      request.onblocked = () => {\n        alert('Blocked')\n      };\n    });\n  }\n\n  loadData = (dataBase) => {\n    return new Promise((resolve, reject) => {\n      const transaction = dataBase.transaction('state', 'readonly');\n      const request = transaction.objectStore('state').get(1);\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  addOrUpdateData = (dataBase, data) => {\n    return new Promise((resolve, reject) => {\n      const transaction = dataBase.transaction('state', 'readwrite');\n      const request = transaction.objectStore('state').put({ 'id': 1, 'data': data });\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  addComponent = () => {\n    this.setState({\n      childrensData: [...this.state.childrensData, { key: Date.now() + Math.random() }]\n    });\n  }\n\n  deleteComponent = (index) => {\n    this.setState({\n      childrensData: this.state.childrensData.filter(data => data.key !== index)\n    });\n  }\n\n  componentWillMount() {\n    var openedDataBase;\n    this.openDataBase().then(result => {\n      openedDataBase = result;\n    }).then(() => {\n      this.loadData(openedDataBase).then(result => {\n        this.generateComponents(result);\n      });\n    });\n  }\n\n  generateComponents = (data) => {\n    this.setState({\n      childrensData: Object.values(data.data)\n    });\n  }\n\n  componentDidMount() {\n    var dataToPush = [];\n    var openedDataBase;\n    window.onbeforeunload = () => {\n    this.state.childrensData.forEach(element => {\n      dataToPush.push(element);\n    });\n    this.openDataBase().then(result => {\n      openedDataBase = result;\n    }).then(() => {\n      this.addOrUpdateData(openedDataBase, dataToPush);\n    });\n    }\n  }\n\n  saveChildData = (data, key) => {\n    let child = this.state.childrensData.filter(x => x.key === key)[0];\n    let childIndex = this.state.childrensData.indexOf(child);\n    let dataToAdd = {question: data.question, inputType: data.inputType, answer: data.answer, condition: data.condition, childrensData: data.childrensData}\n    this.setState(state => {\n      const childrensData = state.childrensData.map((element, index) => {\n        if(childIndex === index) {\n          return {...child, ...dataToAdd}\n        } else {\n          return element;\n        }\n      })\n      return {\n        childrensData\n      }\n    });\n  }\n\n  render() {\n    let child = this.state.childrensData.map((data) => {\n      return <Input key={data.key} \n                    selfIndex={data.key} \n                    onComponentDelete={this.deleteComponent} \n                    onComponentChange={this.saveChildData} \n                    question={data.question} \n                    inputType={data.inputType} \n                    childrensData={data.childrensData} \n                    answer={data.answer}> </Input>\n    });\n    return (\n      <div>\n        {child}\n        <Button variant=\"contained\" color=\"primary\" onClick={this.addComponent}>Add Input</Button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}